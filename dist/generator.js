"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateTypes = generateTypes;
const internals_1 = require("@prisma/internals");
const fs_1 = require("fs");
const path_1 = require("path");
async function generateTypes(opts) {
    const schema = await fs_1.promises.readFile(opts.schemaPath, 'utf-8');
    const dmmf = await (0, internals_1.getDMMF)({ datamodel: schema });
    const models = dmmf.datamodel.models.map((m) => m.name);
    const lines = [
        `// Generated by prisma-emitter-extension, do not edit`,
        `import { Prisma } from '@prisma/client'`,
        ``,
        `declare module '@prisma/client' {`,
        `  namespace Prisma {`,
    ];
    for (const model of models) {
        for (const op of ['Create', 'Update', 'Upsert', 'updateMany']) {
            lines.push(`    interface ${model}${op}Args {`, `      emit?: boolean`, `    }`);
        }
    }
    lines.push(`  }`, `}`);
    await fs_1.promises.mkdir(opts.outDir, { recursive: true });
    const outFile = (0, path_1.resolve)(opts.outDir, 'prisma-emit.d.ts');
    await fs_1.promises.writeFile(outFile, lines.join('\n') + '\n');
}
